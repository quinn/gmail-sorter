package ui

import (
	"github.com/quinn/gmail-sorter/internal/web/middleware"
	"github.com/quinn/gmail-sorter/internal/web/models"
	"go.quinn.io/ccf/assets"
)

templ Layout(actions []models.Action) {
	<!DOCTYPE html>
	<html>
		<head>
			<title>{ middleware.GetTitle(ctx) }</title>
			<link rel="stylesheet" href={ assets.Path("css/styles.css") }/>
			<link rel="stylesheet" href={ assets.Path("fonts/fonts.css") }/>
			<script src={ assets.Path("js/htmx.js") } defer></script>
		</head>
		<body class="body" hx-indicator="#htmx-loading-indicator">
			<div id="htmx-loading-indicator" class="fixed inset-0 z-50 flex items-center justify-center bg-white/70 dark:bg-black/70 hidden" aria-hidden="true">
				<div class="w-12 h-12 border-4 border-gray-200 border-t-blue-600 rounded-full animate-spin" role="status" aria-label="Loading"></div>
			</div>
			<div class="overflow-y-auto">
				{ children... }
			</div>
			<div>
				for _, action := range actions {
					<form
						action={ action.Path }
						method={ action.Method }
						hx-trigger={ "click, keyup[key=='" + action.Shortcut + "'] from:body" }
						hx-boost="true"
					>
						if action.Fields != nil {
							for name, value := range action.Fields {
								<input type="hidden" name={ name } value={ value }/>
							}
						}
						<button>{ action.Label } [{ action.Shortcut }]</button>
					</form>
				}
			</div>
		</body>
	</html>
}
